# toe te passen op de Data-Doe-Dag 2025 collectiedata https://omeka.netwerkdigitaalerfgoed.nl/files/datadumps/all-ddd.nt

prefix owl:		<http://www.w3.org/2002/07/owl#>
prefix dc:		<http://purl.org/dc/elements/1.1/>
prefix dcterms:	<http://purl.org/dc/terms/>
prefix skos:	<http://www.w3.org/2004/02/skos/core#>
prefix sdo:		<https://schema.org/>
prefix edm:		<http://www.europeana.eu/schemas/edm/>
prefix ore:		<http://www.openarchives.org/ore/terms/>
prefix doap:	<http://usefulinc.com/ns/doap#>
prefix svcs:	<http://rdfs.org/sioc/services#>
prefix o:		<http://omeka.org/s/vocabs/o#>

construct {

  ?uri_cho a edm:ProvidedCHO ;
    dc:identifier ?identifier ;
    edm:type ?edm_type ;
	dc:tyoe ?addiType ;
    dc:creator ?creator ;
    dc:publisher ?publisher ;
    dcterms:created ?dateCreated ;
    dc:description ?description ;
    dc:type ?genre ;
    dc:subject ?subject ;
    dc:title ?name ;
	dc:rights ?rights ;
    dcterms:spatial ?spatial ;
    dcterms:temporal ?temporal ;
    dcterms:medium ?material ;
    dcterms:extent ?extent .

  ?uri_ore a ore:Aggregation ;
    edm:aggregatedCHO ?uri_cho ;
    edm:provider ?provider ;
    edm:dataProvider ?dataProvider ;
    edm:rights ?license ;
    edm:hasView ?isShownBy ;
    # was edm:isShownBy
    edm:isShownAt ?isShownAt .

  ?isShownBy a edm:WebResource ;
    svcs:has_service ?uri_iiif .

  ?uri_iiif a svcs:Service ;
    dcterms:conformsTo <http://iiif.io/api/image> ;
    doap:implements <http://iiif.io/api/image/2/level1.json> .

  ?uri_org a edm:Agent ;
    skos:prefLabel ?org_name ;
    skos:note ?org_description .

  ?uri_pers a edm:Agent ;
    skos:prefLabel ?pers_name ;
    skos:altLabel ?pers_additionalName ;
    edm:begin ?pers_birthDate ;
    edm:end ?pers_deathDate .

  ?uri_pl a edm:Place ;
    skos:prefLabel ?pl_name ;
    skos:altLabel ?pl_additionalName ;
    owl:sameAs ?pl_sameAs .

} where {
  {
    {
      ?uri_cho a ?type .
      values ?type {
        sdo:CreativeWork sdo:Sculpture sdo:VisualArtwork sdo:Painting sdo:Photograph
      }
      bind(("IMAGE") as ?edm_type)
    } union {
      ?uri_cho a sdo:Book .
      bind(("TEXT") as ?edm_type)
    }

    ?uri_cho o:media/o:id ?media_id .
    bind( iri(concat("https://omeka.netwerkdigitaalerfgoed.nl/iiif/2/",str(?media_id),"/full/max/0/default.jpg")) as ?isShownBy)
    bind( iri(concat("https://omeka.netwerkdigitaalerfgoed.nl/iiif/2/",str(?media_id))) as ?uri_iiif)

    # Generate an "URI_CHO#agg" URI pointing to a ore:Aggregation resource.
    bind( uri(concat(str(?uri_cho),"#agg")) as ?uri_ore)

    # NOTE: The VAR_PROVIDER will be replaced during runtime by the starter.sh script.
    # Europeana requires the provider value to be specified through the aggregation process.
    bind( str('VAR_PROVIDER') as ?provider)
    #BIND( STR('Netwerk Digitaal Erfgoed') as ?dataProvider)
    bind( iri('https://omeka.netwerkdigitaalerfgoed.nl/') as ?dataProvider)

    optional {
      ?uri_cho sdo:creator ?_creator .
      filter(isiri(?_creator))
      ?uri_cho sdo:creator ?__creator .
      ?__creator o:label ?label_creator ;
        o:lang ?lang_creator .
      bind(strlang(?label_creator, ?lang_creator) as ?creator)
    }

    optional {
      ?uri_cho sdo:creator ?_creator .
      filter(isliteral(?_creator))
      bind(strlang(?_creator, "nl") as ?creator)
    }

	optional {
	  ?uri_cho sdo:identifier ?identifier .
	}

	optional {
	  ?uri_cho sdo:additionalType ?addiType .
	}
	
    optional {
      ?uri_cho sdo:description ?description .
    }

    optional {
      ?uri_cho sdo:dateCreated ?dateCreated .
    }

    optional {
      ?uri_cho sdo:genre ?genre .
    }

    optional {
      ?uri_cho sdo:license ?license .
    }

    optional {
      ?uri_cho sdo:size ?extent .
    }

    optional {
      ?uri_cho sdo:name ?name .
    }

    optional {
      ?uri_cho sdo:provider/sdo:name ?publisher .
    }

    optional {
      ?uri_cho sdo:temporalCoverage ?temporal .
    }

    optional {
      ?uri_cho sdo:material ?material .
    }

    optional {
      ?uri_cho sdo:copyrightholder ?rights .
    }
	
    optional {
      ?uri_cho sdo:spatialCoverage ?_spatial .
      filter(isiri(?_spatial))
      ?uri_cho sdo:spatialCoverage ?__spatial .
      ?__spatial o:label ?label_spatial ;
        o:lang ?lang_spatial .
      bind(strlang(?label_spatial, ?lang_spatial) as ?spatial)
    }

    optional {
      ?uri_cho sdo:spatialCoverage ?_spatial .
      filter(isliteral(?_spatial))
      bind(strlang(?_spatial, "nl") as ?spatial)
    }

    optional {
      ?uri_cho sdo:locationCreated  ?_spatial .
      filter(isiri(?_spatial))
      ?uri_cho sdo:locationCreated  ?__spatial .
      ?__spatial o:label ?label_spatial ;
        o:lang ?lang_spatial .
      bind(strlang(?label_spatial, ?lang_spatial) as ?spatial)
    }

    optional {
      ?uri_cho sdo:locationCreated  ?_spatial .
      filter(isliteral(?_spatial))
      bind(strlang(?_spatial, "nl") as ?spatial)
    }
	
    optional {
      ?uri_cho sdo:about ?_subject .
      filter(isiri(?_subject))
      ?uri_cho sdo:about ?__subject .
      ?__subject o:label ?label_subject ;
        o:lang ?lang_subject .
      bind(strlang(?label_subject, ?lang_subject) as ?subject)
    }

    optional {
      ?uri_cho sdo:about ?_subject .
      filter(isliteral(?_subject))
      bind(strlang(?_subject, "nl") as ?subject)
    }

    # Europeana requires valid URI for edm:isShownAt
    ?uri_cho o:id ?o_id .
    bind( iri(concat("https://omeka.netwerkdigitaalerfgoed.nl/s/data-doe-dag/item/",str(?o_id))) as ?isShownAt)

  } union {

    ?uri_org a sdo:Organization .
    optional {
      ?uri_org sdo:name ?org_name
    }
    optional {
      ?uri_org sdo:description ?org_desc
    }

  } union {

    ?uri_pers a sdo:Person .
    optional {
      ?uri_pers sdo:name ?pers_name
    }
    optional {
      ?uri_pers sdo:additionalName ?pers_additionalName
    }
    optional {
      ?uri_pers sdo:birthDate ?pers_birthDate
    }
    optional {
      ?uri_pers sdo:deathDate ?pers_deathDate
    }
    optional {
      ?uri_pers sdo:description ?pers_desc
    }

  } union {

    ?uri_pl a sdo:Place .
    optional {
      ?uri_pl sdo:name ?pl_name
    }
    optional {
      ?uri_pl sdo:alternateName ?pl_alternateName
    }
    optional {
      ?uri_pl sdo:sameAs ?pl_sameAs
    }
  }
}